{"ast":null,"code":"import Response from \"./Response\";\nimport StitchClientError from \"../../StitchClientError\";\nimport { StitchClientErrorCode } from \"../../StitchClientErrorCode\";\nimport fetch from \"fetch-everywhere\";\n\nvar FetchTransport = function () {\n  function FetchTransport() {}\n\n  FetchTransport.prototype.roundTrip = function (request) {\n    var responsePromise = fetch(request.url, {\n      body: request.body,\n      headers: request.headers,\n      method: request.method,\n      mode: 'cors'\n    });\n    var responseTextPromise = responsePromise.then(function (response) {\n      return response.text();\n    });\n    return Promise.all([responsePromise, responseTextPromise]).then(function (values) {\n      var response = values[0];\n      var body = values[1];\n      var headers = {};\n      response.headers.forEach(function (value, key) {\n        headers[key] = value;\n      });\n      return new Response(headers, response.status, body);\n    });\n  };\n\n  FetchTransport.prototype.stream = function (request, open, retryRequest) {\n    if (open === void 0) {\n      open = true;\n    }\n\n    throw new StitchClientError(StitchClientErrorCode.StreamingNotSupported);\n  };\n\n  return FetchTransport;\n}();\n\nexport default FetchTransport;","map":{"version":3,"sources":["../../../../src/internal/net/FetchTransport.ts"],"names":[],"mappings":"AAoBA,OAAO,QAAP,MAAqB,YAArB;AAEA,OAAO,iBAAP,MAA8B,yBAA9B;AACA,SAAS,qBAAT,QAAsC,6BAAtC;AACA,OAAO,KAAP,MAAkB,kBAAlB;;AAGA,IAAA,cAAA,GAAA,YAAA;AAAA,WAAA,cAAA,GAAA,CA2BC;;AA1BQ,EAAA,cAAA,CAAA,SAAA,CAAA,SAAA,GAAP,UAAiB,OAAjB,EAAsC;AACpC,QAAM,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC,GAAT,EAAc;AACzC,MAAA,IAAI,EAAE,OAAO,CAAC,IAD2B;AAEzC,MAAA,OAAO,EAAE,OAAO,CAAC,OAFwB;AAGzC,MAAA,MAAM,EAAE,OAAO,CAAC,MAHyB;AAIzC,MAAA,IAAI,EAAE;AAJmC,KAAd,CAA7B;AAOA,QAAM,mBAAmB,GAAG,eAAe,CAAC,IAAhB,CAAqB,UAAA,QAAA,EAAQ;AACvD,aAAA,QAAQ,CAAC,IAAT,EAAA;AAAe,KADW,CAA5B;AAIA,WAAO,OAAO,CAAC,GAAR,CAAY,CAAC,eAAD,EAAkB,mBAAlB,CAAZ,EAAoD,IAApD,CAAyD,UAAA,MAAA,EAAM;AACpE,UAAM,QAAQ,GAAG,MAAM,CAAC,CAAD,CAAvB;AACA,UAAM,IAAI,GAAG,MAAM,CAAC,CAAD,CAAnB;AACA,UAAM,OAAO,GAA8B,EAA3C;AACA,MAAA,QAAQ,CAAC,OAAT,CAAiB,OAAjB,CAAyB,UAAC,KAAD,EAAQ,GAAR,EAAW;AAClC,QAAA,OAAO,CAAC,GAAD,CAAP,GAAe,KAAf;AACD,OAFD;AAGA,aAAO,IAAI,QAAJ,CAAa,OAAb,EAAsB,QAAQ,CAAC,MAA/B,EAAuC,IAAvC,CAAP;AACD,KARM,CAAP;AASD,GArBM;;AAuBA,EAAA,cAAA,CAAA,SAAA,CAAA,MAAA,GAAP,UAAc,OAAd,EAAqC,IAArC,EAA2D,YAA3D,EAAoG;AAA/D,QAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,IAAA,GAAA,IAAA;AAAoB;;AACvD,UAAM,IAAI,iBAAJ,CAAsB,qBAAqB,CAAC,qBAA5C,CAAN;AACD,GAFM;;AAGT,SAAA,cAAA;AAAC,CA3BD,EAAA","sourceRoot":"","sourcesContent":["import Response from \"./Response\";\nimport StitchClientError from \"../../StitchClientError\";\nimport { StitchClientErrorCode } from \"../../StitchClientErrorCode\";\nimport fetch from \"fetch-everywhere\";\nvar FetchTransport = (function () {\n    function FetchTransport() {\n    }\n    FetchTransport.prototype.roundTrip = function (request) {\n        var responsePromise = fetch(request.url, {\n            body: request.body,\n            headers: request.headers,\n            method: request.method,\n            mode: 'cors'\n        });\n        var responseTextPromise = responsePromise.then(function (response) {\n            return response.text();\n        });\n        return Promise.all([responsePromise, responseTextPromise]).then(function (values) {\n            var response = values[0];\n            var body = values[1];\n            var headers = {};\n            response.headers.forEach(function (value, key) {\n                headers[key] = value;\n            });\n            return new Response(headers, response.status, body);\n        });\n    };\n    FetchTransport.prototype.stream = function (request, open, retryRequest) {\n        if (open === void 0) { open = true; }\n        throw new StitchClientError(StitchClientErrorCode.StreamingNotSupported);\n    };\n    return FetchTransport;\n}());\nexport default FetchTransport;\n//# sourceMappingURL=FetchTransport.js.map"]},"metadata":{},"sourceType":"module"}