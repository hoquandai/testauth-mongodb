{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Event, BaseEventStream, utf8Slice, StitchEvent, StitchClientError, StitchClientErrorCode } from \"mongodb-stitch-core-sdk\";\n\nvar ReaderEventStream = function (_super) {\n  __extends(ReaderEventStream, _super);\n\n  function ReaderEventStream(readerStream, open, reconnecter) {\n    var _this = _super.call(this, reconnecter) || this;\n\n    _this.readerStream = readerStream;\n\n    if (open) {\n      _this.reset();\n    }\n\n    return _this;\n  }\n\n  ReaderEventStream.prototype.open = function () {\n    if (this.closed) {\n      throw new StitchClientError(StitchClientErrorCode.StreamClosed);\n    }\n\n    this.reset();\n  };\n\n  ReaderEventStream.prototype.reset = function () {\n    this.reader = this.readerStream.getReader();\n    this.dataBuffer = new Array();\n    this.eventName = \"\";\n    this.bufferPos = 0;\n    this.buffer = new Array();\n    this.doneOnce = false;\n    this.processLine();\n  };\n\n  ReaderEventStream.prototype.onReconnect = function (next) {\n    this.readerStream = next.readerStream;\n    this.reset();\n  };\n\n  ReaderEventStream.prototype.readLine = function () {\n    var _this = this;\n\n    for (; this.bufferPos < this.buffer.length; this.bufferPos++) {\n      var spliceAt = -1;\n\n      if (this.buffer[this.bufferPos] === 0x0D && this.bufferPos + 1 > this.buffer.length && this.buffer[this.bufferPos] === 0x0A) {\n        spliceAt = this.bufferPos + 2;\n      } else if (this.buffer[this.bufferPos] === 0x0A) {\n        spliceAt = this.bufferPos + 1;\n      } else if (this.doneOnce && this.buffer[this.bufferPos] === 0x0D) {\n        spliceAt = this.bufferPos + 1;\n      } else if (this.doneOnce) {\n        spliceAt = 0;\n      }\n\n      if (spliceAt !== -1) {\n        var line = utf8Slice(new Uint8Array(this.buffer.slice(0, this.bufferPos)), 0, this.bufferPos);\n        this.buffer.splice(0, spliceAt);\n        this.bufferPos = 0;\n        return Promise.resolve({\n          line: line,\n          ok: true\n        });\n      }\n    }\n\n    if (this.doneOnce) {\n      return Promise.resolve({\n        line: \"\",\n        ok: false\n      });\n    }\n\n    return this.reader.read().then(function (result) {\n      if (result.done) {\n        _this.doneOnce = true;\n        return _this.readLine();\n      }\n\n      var bytes = result.value;\n\n      for (var idx = 0; idx < bytes.length; idx++) {\n        _this.buffer.push(bytes[idx]);\n      }\n\n      return _this.readLine();\n    });\n  };\n\n  ReaderEventStream.prototype.processField = function (field, value) {\n    if (field === \"event\") {\n      this.eventName = value;\n    } else if (field === \"data\") {\n      if (this.dataBuffer.length !== 0) {\n        this.dataBuffer.push('\\n');\n      }\n\n      for (var i = 0; i < value.length; i++) {\n        this.dataBuffer.push(value[i]);\n      }\n    } else if (field === \"id\") {} else if (field === \"retry\") {} else {}\n  };\n\n  ReaderEventStream.prototype.dispatchEvent = function () {\n    if (this.dataBuffer.length === 0) {\n      this.eventName = \"\";\n      return;\n    }\n\n    var event = new Event(this.eventName ? this.eventName : Event.MESSAGE_EVENT, this.dataBuffer.join(''));\n    this.dataBuffer = new Array();\n    this.eventName = \"\";\n\n    if (event.eventName === StitchEvent.ERROR_EVENT_NAME) {\n      this.lastErr = event.data;\n      this.close();\n    }\n\n    this.events.push(event);\n    this.poll();\n  };\n\n  ReaderEventStream.prototype.processLine = function () {\n    var _this = this;\n\n    this.readLine().then(function (result) {\n      if (!result.ok) {\n        if (_this.closed) {\n          return;\n        }\n\n        _this.reconnect();\n\n        return;\n      }\n\n      var line = result.line;\n\n      if (line.length === 0) {\n        _this.dispatchEvent();\n      } else if (line.startsWith(\":\")) {} else if (line.includes(\":\")) {\n        var colonIdx = line.indexOf(\":\");\n        var field = line.substring(0, colonIdx);\n        var value = line.substring(colonIdx + 1);\n        value = value.startsWith(\" \") ? value.substring(1) : value;\n\n        _this.processField(field, value);\n      } else {\n        _this.processField(line, \"\");\n      }\n\n      _this.processLine();\n    }).catch(function (error) {\n      return _this.reconnect(error);\n    });\n  };\n\n  ReaderEventStream.prototype.afterClose = function () {\n    this.reader.cancel();\n  };\n\n  return ReaderEventStream;\n}(BaseEventStream);\n\nexport default ReaderEventStream;","map":{"version":3,"sources":["../../../../../src/core/internal/net/ReaderEventStream.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAgBA,SACE,KADF,EAEE,eAFF,EAGE,SAHF,EAIE,WAJF,EAKE,iBALF,EAME,qBANF,QAOO,yBAPP;;AAUA,IAAA,iBAAA,GAAA,UAAA,MAAA,EAAA;AAA+C,EAAA,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA;;AAU7C,WAAA,iBAAA,CACE,YADF,EAEE,IAFF,EAGE,WAHF,EAGgD;AAHhD,QAAA,KAAA,GAKE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,WAAN,KAAkB,IALpB;;AAME,IAAA,KAAI,CAAC,YAAL,GAAoB,YAApB;;AAEA,QAAI,IAAJ,EAAU;AACR,MAAA,KAAI,CAAC,KAAL;AACD;;;AACF;;AAEM,EAAA,iBAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACE,QAAI,KAAK,MAAT,EAAiB;AACf,YAAM,IAAI,iBAAJ,CAAsB,qBAAqB,CAAC,YAA5C,CAAN;AACD;;AACD,SAAK,KAAL;AACD,GALM;;AAOC,EAAA,iBAAA,CAAA,SAAA,CAAA,KAAA,GAAR,YAAA;AAGE,SAAK,MAAL,GAAc,KAAK,YAAL,CAAkB,SAAlB,EAAd;AACA,SAAK,UAAL,GAAkB,IAAI,KAAJ,EAAlB;AACA,SAAK,SAAL,GAAiB,EAAjB;AACA,SAAK,SAAL,GAAiB,CAAjB;AACA,SAAK,MAAL,GAAc,IAAI,KAAJ,EAAd;AACA,SAAK,QAAL,GAAgB,KAAhB;AAEA,SAAK,WAAL;AACD,GAXO;;AAaE,EAAA,iBAAA,CAAA,SAAA,CAAA,WAAA,GAAV,UAAsB,IAAtB,EAA6C;AAC3C,SAAK,YAAL,GAAoB,IAAI,CAAC,YAAzB;AACA,SAAK,KAAL;AACD,GAHS;;AAKF,EAAA,iBAAA,CAAA,SAAA,CAAA,QAAA,GAAR,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,WAAO,KAAK,SAAL,GAAiB,KAAK,MAAL,CAAY,MAApC,EAA4C,KAAK,SAAL,EAA5C,EAA8D;AAC5D,UAAI,QAAQ,GAAG,CAAC,CAAhB;;AACA,UAAI,KAAK,MAAL,CAAY,KAAK,SAAjB,MAAgC,IAAhC,IAAwC,KAAK,SAAL,GAAiB,CAAjB,GAAqB,KAAK,MAAL,CAAY,MAAzE,IAAmF,KAAK,MAAL,CAAY,KAAK,SAAjB,MAAgC,IAAvH,EAA6H;AAC3H,QAAA,QAAQ,GAAG,KAAK,SAAL,GAAiB,CAA5B;AACD,OAFD,MAEO,IAAI,KAAK,MAAL,CAAY,KAAK,SAAjB,MAAgC,IAApC,EAA0C;AAC/C,QAAA,QAAQ,GAAG,KAAK,SAAL,GAAiB,CAA5B;AACD,OAFM,MAEA,IAAI,KAAK,QAAL,IAAiB,KAAK,MAAL,CAAY,KAAK,SAAjB,MAAgC,IAArD,EAA2D;AAChE,QAAA,QAAQ,GAAG,KAAK,SAAL,GAAiB,CAA5B;AACD,OAFM,MAEA,IAAI,KAAK,QAAT,EAAmB;AACxB,QAAA,QAAQ,GAAG,CAAX;AACD;;AACD,UAAI,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AAClB,YAAI,IAAI,GAAG,SAAS,CAAC,IAAI,UAAJ,CAAe,KAAK,MAAL,CAAY,KAAZ,CAAkB,CAAlB,EAAqB,KAAK,SAA1B,CAAf,CAAD,EAAuD,CAAvD,EAA0D,KAAK,SAA/D,CAApB;AACC,aAAK,MAAL,CAAY,MAAZ,CAAmB,CAAnB,EAAsB,QAAtB;AACA,aAAK,SAAL,GAAiB,CAAjB;AACA,eAAO,OAAO,CAAC,OAAR,CAAgB;AAAE,UAAA,IAAI,EAAA,IAAN;AAAQ,UAAA,EAAE,EAAE;AAAZ,SAAhB,CAAP;AACH;AACF;;AACD,QAAI,KAAK,QAAT,EAAmB;AACjB,aAAO,OAAO,CAAC,OAAR,CAAgB;AAAE,QAAA,IAAI,EAAE,EAAR;AAAY,QAAA,EAAE,EAAE;AAAhB,OAAhB,CAAP;AACD;;AACD,WAAO,KAAK,MAAL,CAAY,IAAZ,GAAmB,IAAnB,CAAwB,UAAA,MAAA,EAAM;AACnC,UAAI,MAAM,CAAC,IAAX,EAAiB;AACf,QAAA,KAAI,CAAC,QAAL,GAAgB,IAAhB;AAEA,eAAO,KAAI,CAAC,QAAL,EAAP;AACD;;AACD,UAAI,KAAK,GAAG,MAAM,CAAC,KAAnB;;AACA,WAAK,IAAI,GAAG,GAAG,CAAf,EAAkB,GAAG,GAAG,KAAK,CAAC,MAA9B,EAAsC,GAAG,EAAzC,EAA6C;AAC1C,QAAA,KAAI,CAAC,MAAL,CAAY,IAAZ,CAAiB,KAAK,CAAC,GAAD,CAAtB;AACF;;AACD,aAAO,KAAI,CAAC,QAAL,EAAP;AACD,KAXM,CAAP;AAYD,GAlCO;;AAsCA,EAAA,iBAAA,CAAA,SAAA,CAAA,YAAA,GAAR,UAAqB,KAArB,EAAoC,KAApC,EAAiD;AAE/C,QAAI,KAAK,KAAK,OAAd,EAAuB;AACrB,WAAK,SAAL,GAAiB,KAAjB;AACD,KAFD,MAIK,IAAI,KAAK,KAAK,MAAd,EAAsB;AAExB,UAAI,KAAK,UAAL,CAAgB,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,aAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB;AACD;;AACD,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,aAAK,UAAL,CAAgB,IAAhB,CAAqB,KAAK,CAAC,CAAD,CAA1B;AACD;AACH,KARI,MAUA,IAAI,KAAK,KAAK,IAAd,EAAoB,CAExB,CAFI,MAIA,IAAI,KAAK,KAAK,OAAd,EAAuB,CAE3B,CAFI,MAIA,CAEJ;AACF,GA3BO;;AA6BA,EAAA,iBAAA,CAAA,SAAA,CAAA,aAAA,GAAR,YAAA;AAEE,QAAI,KAAK,UAAL,CAAgB,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,WAAK,SAAL,GAAiB,EAAjB;AACA;AACD;;AAaD,QAAM,KAAK,GAAG,IAAI,KAAJ,CAAU,KAAK,SAAL,GAAiB,KAAK,SAAtB,GAAkC,KAAK,CAAC,aAAlD,EAAiE,KAAK,UAAL,CAAgB,IAAhB,CAAqB,EAArB,CAAjE,CAAd;AAGA,SAAK,UAAL,GAAkB,IAAI,KAAJ,EAAlB;AACA,SAAK,SAAL,GAAiB,EAAjB;;AAGA,QAAI,KAAK,CAAC,SAAN,KAAoB,WAAW,CAAC,gBAApC,EAAsD;AAEpD,WAAK,OAAL,GAAe,KAAK,CAAC,IAArB;AACA,WAAK,KAAL;AACD;;AACD,SAAK,MAAL,CAAY,IAAZ,CAAiB,KAAjB;AACA,SAAK,IAAL;AACD,GAhCO;;AAmCA,EAAA,iBAAA,CAAA,SAAA,CAAA,WAAA,GAAR,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,SAAK,QAAL,GAAgB,IAAhB,CAAqB,UAAA,MAAA,EAAM;AACzB,UAAI,CAAC,MAAM,CAAC,EAAZ,EAAgB;AACd,YAAI,KAAI,CAAC,MAAT,EAAiB;AACf;AACD;;AACD,QAAA,KAAI,CAAC,SAAL;;AACA;AACD;;AACD,UAAM,IAAI,GAAG,MAAM,CAAC,IAApB;;AAGA,UAAI,IAAI,CAAC,MAAL,KAAgB,CAApB,EAAuB;AACrB,QAAA,KAAI,CAAC,aAAL;AACD,OAFD,MAIK,IAAI,IAAI,CAAC,UAAL,CAAgB,GAAhB,CAAJ,EAA0B,CAE9B,CAFI,MAIA,IAAI,IAAI,CAAC,QAAL,CAAc,GAAd,CAAJ,EAAwB;AAE3B,YAAM,QAAQ,GAAG,IAAI,CAAC,OAAL,CAAa,GAAb,CAAjB;AACA,YAAM,KAAK,GAAG,IAAI,CAAC,SAAL,CAAe,CAAf,EAAkB,QAAlB,CAAd;AAIA,YAAI,KAAK,GAAG,IAAI,CAAC,SAAL,CAAe,QAAQ,GAAG,CAA1B,CAAZ;AACA,QAAA,KAAK,GAAG,KAAK,CAAC,UAAN,CAAiB,GAAjB,IAAwB,KAAK,CAAC,SAAN,CAAgB,CAAhB,CAAxB,GAA6C,KAArD;;AAGA,QAAA,KAAI,CAAC,YAAL,CAAkB,KAAlB,EAAyB,KAAzB;AACD,OAZI,MAcA;AAEH,QAAA,KAAI,CAAC,YAAL,CAAkB,IAAlB,EAAwB,EAAxB;AACD;;AAED,MAAA,KAAI,CAAC,WAAL;AACD,KAvCD,EAuCG,KAvCH,CAuCS,UAAA,KAAA,EAAK;AAAI,aAAA,KAAI,CAAC,SAAL,CAAA,KAAA,CAAA;AAAqB,KAvCvC;AAwCD,GAzCO;;AA2CE,EAAA,iBAAA,CAAA,SAAA,CAAA,UAAA,GAAV,YAAA;AACE,SAAK,MAAL,CAAY,MAAZ;AACD,GAFS;;AAGZ,SAAA,iBAAA;AAAC,CApMD,CAA+C,eAA/C,CAAA","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Event, BaseEventStream, utf8Slice, StitchEvent, StitchClientError, StitchClientErrorCode } from \"mongodb-stitch-core-sdk\";\nvar ReaderEventStream = (function (_super) {\n    __extends(ReaderEventStream, _super);\n    function ReaderEventStream(readerStream, open, reconnecter) {\n        var _this = _super.call(this, reconnecter) || this;\n        _this.readerStream = readerStream;\n        if (open) {\n            _this.reset();\n        }\n        return _this;\n    }\n    ReaderEventStream.prototype.open = function () {\n        if (this.closed) {\n            throw new StitchClientError(StitchClientErrorCode.StreamClosed);\n        }\n        this.reset();\n    };\n    ReaderEventStream.prototype.reset = function () {\n        this.reader = this.readerStream.getReader();\n        this.dataBuffer = new Array();\n        this.eventName = \"\";\n        this.bufferPos = 0;\n        this.buffer = new Array();\n        this.doneOnce = false;\n        this.processLine();\n    };\n    ReaderEventStream.prototype.onReconnect = function (next) {\n        this.readerStream = next.readerStream;\n        this.reset();\n    };\n    ReaderEventStream.prototype.readLine = function () {\n        var _this = this;\n        for (; this.bufferPos < this.buffer.length; this.bufferPos++) {\n            var spliceAt = -1;\n            if (this.buffer[this.bufferPos] === 0x0D && this.bufferPos + 1 > this.buffer.length && this.buffer[this.bufferPos] === 0x0A) {\n                spliceAt = this.bufferPos + 2;\n            }\n            else if (this.buffer[this.bufferPos] === 0x0A) {\n                spliceAt = this.bufferPos + 1;\n            }\n            else if (this.doneOnce && this.buffer[this.bufferPos] === 0x0D) {\n                spliceAt = this.bufferPos + 1;\n            }\n            else if (this.doneOnce) {\n                spliceAt = 0;\n            }\n            if (spliceAt !== -1) {\n                var line = utf8Slice(new Uint8Array(this.buffer.slice(0, this.bufferPos)), 0, this.bufferPos);\n                this.buffer.splice(0, spliceAt);\n                this.bufferPos = 0;\n                return Promise.resolve({ line: line, ok: true });\n            }\n        }\n        if (this.doneOnce) {\n            return Promise.resolve({ line: \"\", ok: false });\n        }\n        return this.reader.read().then(function (result) {\n            if (result.done) {\n                _this.doneOnce = true;\n                return _this.readLine();\n            }\n            var bytes = result.value;\n            for (var idx = 0; idx < bytes.length; idx++) {\n                _this.buffer.push(bytes[idx]);\n            }\n            return _this.readLine();\n        });\n    };\n    ReaderEventStream.prototype.processField = function (field, value) {\n        if (field === \"event\") {\n            this.eventName = value;\n        }\n        else if (field === \"data\") {\n            if (this.dataBuffer.length !== 0) {\n                this.dataBuffer.push('\\n');\n            }\n            for (var i = 0; i < value.length; i++) {\n                this.dataBuffer.push(value[i]);\n            }\n        }\n        else if (field === \"id\") {\n        }\n        else if (field === \"retry\") {\n        }\n        else {\n        }\n    };\n    ReaderEventStream.prototype.dispatchEvent = function () {\n        if (this.dataBuffer.length === 0) {\n            this.eventName = \"\";\n            return;\n        }\n        var event = new Event(this.eventName ? this.eventName : Event.MESSAGE_EVENT, this.dataBuffer.join(''));\n        this.dataBuffer = new Array();\n        this.eventName = \"\";\n        if (event.eventName === StitchEvent.ERROR_EVENT_NAME) {\n            this.lastErr = event.data;\n            this.close();\n        }\n        this.events.push(event);\n        this.poll();\n    };\n    ReaderEventStream.prototype.processLine = function () {\n        var _this = this;\n        this.readLine().then(function (result) {\n            if (!result.ok) {\n                if (_this.closed) {\n                    return;\n                }\n                _this.reconnect();\n                return;\n            }\n            var line = result.line;\n            if (line.length === 0) {\n                _this.dispatchEvent();\n            }\n            else if (line.startsWith(\":\")) {\n            }\n            else if (line.includes(\":\")) {\n                var colonIdx = line.indexOf(\":\");\n                var field = line.substring(0, colonIdx);\n                var value = line.substring(colonIdx + 1);\n                value = value.startsWith(\" \") ? value.substring(1) : value;\n                _this.processField(field, value);\n            }\n            else {\n                _this.processField(line, \"\");\n            }\n            _this.processLine();\n        }).catch(function (error) { return _this.reconnect(error); });\n    };\n    ReaderEventStream.prototype.afterClose = function () {\n        this.reader.cancel();\n    };\n    return ReaderEventStream;\n}(BaseEventStream));\nexport default ReaderEventStream;\n//# sourceMappingURL=ReaderEventStream.js.map"]},"metadata":{},"sourceType":"module"}