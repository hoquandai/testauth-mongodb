{"ast":null,"code":"import _regeneratorRuntime from\"/home/lake/Documents/mongodb/testauth/node_modules/@babel/runtime/regenerator\";import _classCallCheck from\"/home/lake/Documents/mongodb/testauth/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/lake/Documents/mongodb/testauth/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/lake/Documents/mongodb/testauth/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/lake/Documents/mongodb/testauth/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/lake/Documents/mongodb/testauth/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import ReactDOM from'react-dom';//start stitch import\nimport{Stitch,GoogleRedirectCredential}from\"mongodb-stitch-browser-sdk\";//end stitch import\n// Create a component to display google auth user information\nvar User=function User(_ref){var name=_ref.data;return name&&React.createElement(\"div\",null,React.createElement(\"pre\",null,name));};// Create the main component\nvar Demo=/*#__PURE__*/function(_React$Component){_inherits(Demo,_React$Component);function Demo(props){var _this;_classCallCheck(this,Demo);_this=_possibleConstructorReturn(this,_getPrototypeOf(Demo).call(this,props));_this.state={currentUser:false};return _this;}_createClass(Demo,[{key:\"componentDidMount\",value:function componentDidMount(){return _regeneratorRuntime.async(function componentDidMount$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(this.setupStitch());case 2:case\"end\":return _context.stop();}}},null,this);}//start stitch setup\n},{key:\"setupStitch\",value:function setupStitch(){var appId,client,cu,credential;return _regeneratorRuntime.async(function setupStitch$(_context2){while(1){switch(_context2.prev=_context2.next){case 0://copy the name of your google-auth enabled stitch application here\n//the name of the app will typically be the stitch application name\n//with a \"-\"\" + random string appended\nappId='testauth-gelqb';// Get a client for your Stitch app, or instantiate a new one\nclient=Stitch.hasAppClient(appId)?Stitch.getAppClient(appId):Stitch.initializeAppClient(appId);//manage user authentication state\n// Check if this user has already authenticated and we're here\n// from the redirect. If so, process the redirect to finish login.\nif(!client.auth.hasRedirectResult()){_context2.next=6;break;}_context2.next=5;return _regeneratorRuntime.awrap(client.auth.handleRedirectResult().catch(console.error));case 5:console.log(\"Processed redirect result.\");case 6:if(client.auth.isLoggedIn){// The user is logged in. Add their user object to component state.\ncu=client.auth.user;this.setState({currentUser:cu});}else{// The user has not yet authenticated. Begin the Google login flow.\ncredential=new GoogleRedirectCredential();client.auth.loginWithRedirect(credential);}case 7:case\"end\":return _context2.stop();}}},null,this);}//end stitch setup\n},{key:\"render\",value:function render(){var currentUser=this.state.currentUser;return!currentUser?React.createElement(\"div\",null,\"User must authenticate.\"):React.createElement(User,{profile:currentUser.profile});}}]);return Demo;}(React.Component);// ========================================\nReactDOM.render(React.createElement(Demo,null),document.getElementById('root'));","map":{"version":3,"sources":["/home/lake/Documents/mongodb/testauth/src/index.js"],"names":["React","ReactDOM","Stitch","GoogleRedirectCredential","User","name","data","Demo","props","state","currentUser","setupStitch","appId","client","hasAppClient","getAppClient","initializeAppClient","auth","hasRedirectResult","handleRedirectResult","catch","console","error","log","isLoggedIn","cu","user","setState","credential","loginWithRedirect","profile","Component","render","document","getElementById"],"mappings":"qtBAAE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CAEA;AACA,OAASC,MAAT,CAAiBC,wBAAjB,KAAiD,4BAAjD,CACA;AAEA;AACA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,UAASC,CAAAA,IAAT,MAAGC,IAAH,OAAoBD,CAAAA,IAAI,EAAI,+BAAK,+BAAMA,IAAN,CAAL,CAA5B,EAAb,CAEA;GACME,CAAAA,I,0EACJ,cAAYC,KAAZ,CAAmB,sCACjB,sEAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACXC,WAAW,CAAE,KADF,CAAb,CAFiB,aAKlB,C,2PAGO,KAAKC,WAAL,E,0DAGR;yMAEE;AACA;AACA;AACMC,K,CAAQ,gB,CAEd;AACMC,M,CAASX,MAAM,CAACY,YAAP,CAAoBF,KAApB,EACXV,MAAM,CAACa,YAAP,CAAoBH,KAApB,CADW,CAEXV,MAAM,CAACc,mBAAP,CAA2BJ,KAA3B,C,CAEJ;AAEA;AACA;IACIC,MAAM,CAACI,IAAP,CAAYC,iBAAZ,E,4EACIL,MAAM,CAACI,IAAP,CAAYE,oBAAZ,GAAmCC,KAAnC,CAAyCC,OAAO,CAACC,KAAjD,C,SACND,OAAO,CAACE,GAAR,CAAY,4BAAZ,E,OAGF,GAAIV,MAAM,CAACI,IAAP,CAAYO,UAAhB,CAA4B,CAC1B;AACIC,EAFsB,CAEjBZ,MAAM,CAACI,IAAP,CAAYS,IAFK,CAG1B,KAAKC,QAAL,CAAc,CAAEjB,WAAW,CAAEe,EAAf,CAAd,EACD,CAJD,IAIO,CACL;AACMG,UAFD,CAEc,GAAIzB,CAAAA,wBAAJ,EAFd,CAGLU,MAAM,CAACI,IAAP,CAAYY,iBAAZ,CAA8BD,UAA9B,EACD,C,yDAEH;uCAES,IACClB,CAAAA,WADD,CACiB,KAAKD,KADtB,CACCC,WADD,CAEP,MAAO,CAACA,WAAD,CACH,yDADG,CAEH,oBAAC,IAAD,EAAM,OAAO,CAAEA,WAAW,CAACoB,OAA3B,EAFJ,CAGD,C,kBAlDgB9B,KAAK,CAAC+B,S,EAqDzB;AAEA9B,QAAQ,CAAC+B,MAAT,CACE,oBAAC,IAAD,MADF,CAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["  import React from 'react';\n  import ReactDOM from 'react-dom';\n\n  //start stitch import\n  import { Stitch, GoogleRedirectCredential } from \"mongodb-stitch-browser-sdk\";\n  //end stitch import\n\n  // Create a component to display google auth user information\n  const User = ({ data: name }) => name && <div><pre>{name}</pre></div>\n\n  // Create the main component\n  class Demo extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        currentUser: false\n      }\n    }\n\n    async componentDidMount() {\n      await this.setupStitch();\n    }\n\n    //start stitch setup\n    async setupStitch() {\n      //copy the name of your google-auth enabled stitch application here\n      //the name of the app will typically be the stitch application name\n      //with a \"-\"\" + random string appended\n      const appId = 'testauth-gelqb';\n\n      // Get a client for your Stitch app, or instantiate a new one\n      const client = Stitch.hasAppClient(appId)\n        ? Stitch.getAppClient(appId)\n        : Stitch.initializeAppClient(appId);\n\n      //manage user authentication state\n      \n      // Check if this user has already authenticated and we're here\n      // from the redirect. If so, process the redirect to finish login.\n      if (client.auth.hasRedirectResult()) {\n        await client.auth.handleRedirectResult().catch(console.error);\n        console.log(\"Processed redirect result.\")\n      }\n\n      if (client.auth.isLoggedIn) {\n        // The user is logged in. Add their user object to component state.\n        var cu = client.auth.user;\n        this.setState({ currentUser: cu});\n      } else {\n        // The user has not yet authenticated. Begin the Google login flow.\n        const credential = new GoogleRedirectCredential();\n        client.auth.loginWithRedirect(credential);\n      }\n    }\n    //end stitch setup\n\n    render() {\n      const { currentUser } = this.state;\n      return !currentUser\n        ? <div>User must authenticate.</div>\n        : <User profile={currentUser.profile}/>\n    }\n  }\n\n  // ========================================\n     \n  ReactDOM.render(\n    <Demo />,\n    document.getElementById('root')\n  );\n"]},"metadata":{},"sourceType":"module"}