{"ast":null,"code":"import { CoreStitchAppClient, CoreStitchServiceClientImpl, StitchAppClientInfo, StitchRequestClient } from \"mongodb-stitch-core-sdk\";\nimport StitchAuthImpl from \"../auth/internal/StitchAuthImpl\";\nimport StitchBrowserAppRoutes from \"../auth/internal/StitchBrowserAppRoutes\";\nimport StitchServiceClientImpl from \"../../services/internal/StitchServiceClientImpl\";\n\nvar StitchAppClientImpl = function () {\n  function StitchAppClientImpl(clientAppId, config) {\n    this.info = new StitchAppClientInfo(clientAppId, config.dataDirectory, config.localAppName, config.localAppVersion);\n    this.routes = new StitchBrowserAppRoutes(this.info.clientAppId, config.baseUrl);\n    var requestClient = new StitchRequestClient(config.baseUrl, config.transport);\n    this.auth = new StitchAuthImpl(requestClient, this.routes.authRoutes, config.storage, this.info);\n    this.coreClient = new CoreStitchAppClient(this.auth, this.routes);\n  }\n\n  StitchAppClientImpl.prototype.getServiceClient = function (factory, serviceName) {\n    if (isServiceClientFactory(factory)) {\n      return factory.getClient(new CoreStitchServiceClientImpl(this.auth, this.routes.serviceRoutes, \"\"), this.info);\n    } else {\n      return factory.getNamedClient(new CoreStitchServiceClientImpl(this.auth, this.routes.serviceRoutes, serviceName), this.info);\n    }\n  };\n\n  StitchAppClientImpl.prototype.getGeneralServiceClient = function (serviceName) {\n    return new StitchServiceClientImpl(new CoreStitchServiceClientImpl(this.auth, this.routes.serviceRoutes, serviceName));\n  };\n\n  StitchAppClientImpl.prototype.callFunction = function (name, args) {\n    return this.coreClient.callFunction(name, args);\n  };\n\n  return StitchAppClientImpl;\n}();\n\nexport default StitchAppClientImpl;\n\nfunction isServiceClientFactory(factory) {\n  return factory.getClient !== undefined;\n}","map":{"version":3,"sources":["../../../../src/core/internal/StitchAppClientImpl.ts"],"names":[],"mappings":"AAgBA,SACE,mBADF,EAEE,2BAFF,EAIE,mBAJF,EAKE,mBALF,QAMO,yBANP;AASA,OAAO,cAAP,MAA2B,iCAA3B;AACA,OAAO,sBAAP,MAAmC,yCAAnC;AAIA,OAAO,uBAAP,MAAoC,iDAApC;;AAGA,IAAA,mBAAA,GAAA,YAAA;AAOE,WAAA,mBAAA,CACE,WADF,EAEE,MAFF,EAEsC;AAEpC,SAAK,IAAL,GAAY,IAAI,mBAAJ,CACV,WADU,EAEV,MAAM,CAAC,aAFG,EAGV,MAAM,CAAC,YAHG,EAIV,MAAM,CAAC,eAJG,CAAZ;AAMA,SAAK,MAAL,GAAc,IAAI,sBAAJ,CACZ,KAAK,IAAL,CAAU,WADE,EAEZ,MAAM,CAAC,OAFK,CAAd;AAIA,QAAM,aAAa,GAAG,IAAI,mBAAJ,CACpB,MAAM,CAAC,OADa,EAEpB,MAAM,CAAC,SAFa,CAAtB;AAIA,SAAK,IAAL,GAAY,IAAI,cAAJ,CACV,aADU,EAEV,KAAK,MAAL,CAAY,UAFF,EAGV,MAAM,CAAC,OAHG,EAIV,KAAK,IAJK,CAAZ;AAMA,SAAK,UAAL,GAAkB,IAAI,mBAAJ,CAAwB,KAAK,IAA7B,EAAmC,KAAK,MAAxC,CAAlB;AACD;;AAEM,EAAA,mBAAA,CAAA,SAAA,CAAA,gBAAA,GAAP,UACE,OADF,EAEE,WAFF,EAEsB;AAEpB,QAAI,sBAAsB,CAAC,OAAD,CAA1B,EAAqC;AACnC,aAAO,OAAO,CAAC,SAAR,CACL,IAAI,2BAAJ,CAAgC,KAAK,IAArC,EAA2C,KAAK,MAAL,CAAY,aAAvD,EAAsE,EAAtE,CADK,EAEL,KAAK,IAFA,CAAP;AAID,KALD,MAKO;AACL,aAAO,OAAO,CAAC,cAAR,CACL,IAAI,2BAAJ,CACE,KAAK,IADP,EAEE,KAAK,MAAL,CAAY,aAFd,EAGE,WAHF,CADK,EAML,KAAK,IANA,CAAP;AAQD;AACF,GAnBM;;AAqBA,EAAA,mBAAA,CAAA,SAAA,CAAA,uBAAA,GAAP,UAA+B,WAA/B,EAAkD;AAChD,WAAO,IAAI,uBAAJ,CACL,IAAI,2BAAJ,CACE,KAAK,IADP,EAEE,KAAK,MAAL,CAAY,aAFd,EAGE,WAHF,CADK,CAAP;AAOD,GARM;;AAUA,EAAA,mBAAA,CAAA,SAAA,CAAA,YAAA,GAAP,UAAoB,IAApB,EAAkC,IAAlC,EAA6C;AAC3C,WAAO,KAAK,UAAL,CAAgB,YAAhB,CAA6B,IAA7B,EAAmC,IAAnC,CAAP;AACD,GAFM;;AAGT,SAAA,mBAAA;AAAC,CApED,EAAA;;;;AAsEA,SAAA,sBAAA,CACE,OADF,EACiE;AAE/D,SAAQ,OAAmC,CAAC,SAApC,KAAkD,SAA1D;AACD","sourceRoot":"","sourcesContent":["import { CoreStitchAppClient, CoreStitchServiceClientImpl, StitchAppClientInfo, StitchRequestClient } from \"mongodb-stitch-core-sdk\";\nimport StitchAuthImpl from \"../auth/internal/StitchAuthImpl\";\nimport StitchBrowserAppRoutes from \"../auth/internal/StitchBrowserAppRoutes\";\nimport StitchServiceClientImpl from \"../../services/internal/StitchServiceClientImpl\";\nvar StitchAppClientImpl = (function () {\n    function StitchAppClientImpl(clientAppId, config) {\n        this.info = new StitchAppClientInfo(clientAppId, config.dataDirectory, config.localAppName, config.localAppVersion);\n        this.routes = new StitchBrowserAppRoutes(this.info.clientAppId, config.baseUrl);\n        var requestClient = new StitchRequestClient(config.baseUrl, config.transport);\n        this.auth = new StitchAuthImpl(requestClient, this.routes.authRoutes, config.storage, this.info);\n        this.coreClient = new CoreStitchAppClient(this.auth, this.routes);\n    }\n    StitchAppClientImpl.prototype.getServiceClient = function (factory, serviceName) {\n        if (isServiceClientFactory(factory)) {\n            return factory.getClient(new CoreStitchServiceClientImpl(this.auth, this.routes.serviceRoutes, \"\"), this.info);\n        }\n        else {\n            return factory.getNamedClient(new CoreStitchServiceClientImpl(this.auth, this.routes.serviceRoutes, serviceName), this.info);\n        }\n    };\n    StitchAppClientImpl.prototype.getGeneralServiceClient = function (serviceName) {\n        return new StitchServiceClientImpl(new CoreStitchServiceClientImpl(this.auth, this.routes.serviceRoutes, serviceName));\n    };\n    StitchAppClientImpl.prototype.callFunction = function (name, args) {\n        return this.coreClient.callFunction(name, args);\n    };\n    return StitchAppClientImpl;\n}());\nexport default StitchAppClientImpl;\nfunction isServiceClientFactory(factory) {\n    return factory.getClient !== undefined;\n}\n//# sourceMappingURL=StitchAppClientImpl.js.map"]},"metadata":{},"sourceType":"module"}